
# ==============================================================================
# PARÁMETROS GLOBALES DE PREPROCESAMIENTO
# ==============================================================================
preprocessing_params:
  target_col: "ConvertedCompYearly"
  
  # Allowlist de columnas categóricas a procesar. Todas las demás serán eliminadas.
  multi_answer_cols: 
    - BuyNewTool
    - CodingActivities
    - LearnCode
    - LearnCodeOnline

  standard_categorical_cols:
    - MainBranch
    - Age
    - Employment
    - RemoteWork
    - EdLevel
    - DevType
    - OrgSize
    - PurchaseInfluence
    - TechList
    - Country

# ==============================================================================
# CONFIGURACIÓN DEL PIPELINE DE REGRESIÓN
# ==============================================================================
regression_pipeline:
  target_col: "ConvertedCompYearly" # Añadido de vuelta para el nodo split_data
  test_size: 0.2
  random_state: 42
  cv_folds: 5
  scoring: "neg_root_mean_squared_error"
  models:
    LinearRegression:
      model_name: "LinearRegression"
      param_grid:
        fit_intercept: [True, False]

    Ridge:
      model_name: "Ridge"
      param_grid:
        alpha: [0.1, 1.0, 10.0]

    Lasso:
      model_name: "Lasso"
      param_grid:
        alpha: [0.01, 0.1, 1.0]

    RandomForestRegressor:
      model_name: "RandomForestRegressor"
      param_grid:
        n_estimators: [100]
        max_depth: [10, 20]

    XGBRegressor:
      model_name: "XGBRegressor"
      param_grid:
        n_estimators: [100]
        learning_rate: [0.01, 0.1]
        max_depth: [3, 5]

# ==============================================================================
# CONFIGURACIÓN DEL PIPELINE DE CLASIFICACIÓN
# ==============================================================================
classification_pipeline:
  target_col: "salary_group" # Necesario para el nodo split_data de clasificación
  original_target_col: "ConvertedCompYearly"
  salary_threshold: 100000
  test_size: 0.2
  random_state: 42
  cv_folds: 5
  scoring: "f1"
  models:
    LogisticRegression:
      model_name: "LogisticRegression"
      param_grid:
        model__C: [0.1, 1.0, 10.0]

    RandomForestClassifier:
      model_name: "RandomForestClassifier"
      param_grid:
        model__n_estimators: [100]
        model__max_depth: [10, 20]

    SVC:
      model_name: "SVC"
      param_grid:
        model__C: [0.1, 1.0]
        model__gamma: ['scale', 'auto']

    XGBClassifier:
      model_name: "XGBClassifier"
      param_grid:
        model__n_estimators: [100]
        model__learning_rate: [0.01, 0.1]
        model__max_depth: [3, 5]

    LGBMClassifier:
      model_name: "LGBMClassifier"
      param_grid:
        model__n_estimators: [100]
        model__learning_rate: [0.01, 0.1]
        model__num_leaves: [31, 50]
